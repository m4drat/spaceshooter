@startuml

title __POOLOBJECTS's Class Diagram__\n

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      package com.madrat.spaceshooter.gameobjects.poolobjects {
        class Asteroid {
            {static} + MIN_ASTEROID_SPAWN_TIME : float
            {static} + MAX_ASTEROID_SPAWN_TIME : float
            {static} + REWARD : int
            {static} + DAMAGE : float
            - asteroidSpeed : float
            - asteroidTextureAnimations : Texture
            - x : float
            - y : float
            + remove : boolean
            - asteroidAnimation : Animation<TextureRegion>
            - stateTime : float
            - radius : int
            + reset()
            + Asteroid()
            + setUpAsteroid()
            + update()
            + render()
            + getCollisionCirlce()
            + getX()
            + getY()
            + getRadius()
            + dispose()
        }
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      package com.madrat.spaceshooter.gameobjects.poolobjects {
        class AsteroidPool {
            - radius : int
            - realWidth : int
            - realHeight : int
            - animationSpeed : float
            + AsteroidPool()
            # newObject()
        }
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      package com.madrat.spaceshooter.gameobjects.poolobjects {
        class Bullet {
            - bulletSpeed : float
            - bulletTexture : Texture
            - bulletAnimation : Animation<TextureRegion>
            - stateTime : float
            - preferredWidth : int
            - preferredHeight : int
            - x : float
            - y : float
            + remove : boolean
            + reset()
            + Bullet()
            + setupBullet()
            + update()
            + render()
            + getCollisionRect()
            + getBulletTexture()
            + getType()
            + getPreferredWidth()
            + getPreferredHeight()
            + getX()
            + getY()
            + dispose()
        }
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      package com.madrat.spaceshooter.gameobjects.poolobjects {
        enum bulletType {
          rocket
          bullet
        }
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      package com.madrat.spaceshooter.gameobjects.poolobjects {
        class BulletPool {
            - bulletTexturePath : String
            - animationSpeed : float
            - realWidth : int
            - realHeight : int
            + BulletPool()
            # newObject()
        }
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      package com.madrat.spaceshooter.gameobjects.poolobjects {
        class Enemy {
            {static} + MIN_ENEMY_WAVE_SPAWN_TIME : float
            {static} + MAX_ENEMY_WAVE_SPAWN_TIME : float
            - enemyAnimationSheet : Texture
            - shipAnimations : Animation<TextureRegion>[]
            - stateTime : float
            - preferredBulletHeight : int
            - preferredBulletWidth : int
            - activeBullets : Array<Bullet>
            - bulletsToRemove : Array<Bullet>
            - colliderXcoordOffset : int
            - colliderYcoordOffset : int
            - colliderWidth : int
            - colliderHeight : int
            - collisionDamage : float
            - difficultyLevel : int
            - reward : int
            + remove : boolean
            + canBeFullyRemoved : boolean
            + reset()
            + Enemy()
            + enemySetUp()
            + update()
            + die()
            + render()
            + setCurrentAnimation()
            + getCurrentAnimation()
            + getActiveBullets()
            + getReward()
            + getCollisionDamage()
            + getDifficultyLevel()
        }
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      package com.madrat.spaceshooter.gameobjects.poolobjects {
        class EnemyPool {
            - realShipWidth : int
            - realShipHeight : int
            - preferredShipWidth : int
            - preferredShipHeight : int
            - colliderWidth : int
            - colliderHeight : int
            - colliderXcoordOffset : int
            - colliderYcoordOffset : int
            - reward : int
            - difficultyLevel : int
            - maxHealth : float
            - damage : float
            - delayBetweenShootsBullets : float
            - bulletsSpeed : float
            - speed : float
            - collisionDamage : float
            - enemyAnimationSheetPath : String
            + EnemyPool()
            # newObject()
        }
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      package com.madrat.spaceshooter.gameobjects.poolobjects {
        class Explosion {
            - explosion : Texture
            - animation : Animation<TextureRegion>
            - x : float
            - y : float
            - stateTime : float
            - byPlayer : boolean
            - preferredWidth : int
            - preferredHeight : int
            + remove : boolean
            + reset()
            + Explosion()
            + setUpExplosion()
            + update()
            + render()
            + isByPlayer()
            + dispose()
        }
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      package com.madrat.spaceshooter.gameobjects.poolobjects {
        class ExplosionPool {
            - frameLength : float
            - tileSize : int
            - explosionTexturePath : String
            + ExplosionPool()
            + ExplosionPool()
            # newObject()
        }
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      package com.madrat.spaceshooter.gameobjects.poolobjects {
        class PowerUp {
            {static} - SPEED : float
            - animations : Animation<TextureRegion>[]
            - x : float
            - y : float
            - stateTime : float
            - timeToLive : float
            + remove : boolean
            - preferredWidth : int
            - preferredHeight : int
            - currentAnimation : int
            + reset()
            + PowerUp()
            + setupPowerUp()
            + update()
            + render()
            + getPowerUpCollisionRect()
        }
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      package com.madrat.spaceshooter.gameobjects.poolobjects {
        class PowerUpPool {
            - frameLength : float
            - tileWidth : int
            - tileHeight : int
            - pathToAnimationSheet : String
            + PowerUpPool()
            # newObject()
        }
      }
    }
  }
  

  Asteroid -up-|> Poolable
  Asteroid o-- CollisionCircle : collisionCircle
  AsteroidPool -up-|> Pool
  Bullet -up-|> Poolable
  Bullet o-- bulletType : type
  Bullet o-- CollisionRect : rect
  Bullet +-down- bulletType
  BulletPool -up-|> Pool
  BulletPool o-- bulletType : type
  Enemy -up-|> Poolable
  Enemy -up-|> SpaceShip
  Enemy o-- animationState : currentAnimation
  Enemy o-- BulletPool : bulletPool
  EnemyPool -up-|> Pool
  EnemyPool o-- shipHandler : handle
  Explosion -up-|> Poolable
  ExplosionPool -up-|> Pool
  PowerUp -up-|> Poolable
  PowerUp o-- CollisionRect : powerUpCollisionRect
  PowerUpPool -up-|> Pool
  PowerUpPool o-- colliderTag : tag


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
