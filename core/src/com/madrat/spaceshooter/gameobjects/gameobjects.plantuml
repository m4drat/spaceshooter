@startuml

title __GAMEOBJECTS's Class Diagram__\n

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      class PlayerShip {
          {static} - healthBarHeight : int
          - shipAnimations : Animation<TextureRegion>[]
          - animationSheet : Texture
          - stateTime : float
          - score : int
          - bulletTexturePath : String
          - rocketTexturePath : String
          - preferredBulletHeight : int
          - preferredBulletWidth : int
          - preferredRocketHeight : int
          - preferredRocketWidth : int
          - rocketSpeed : float
          - lastRocketShoot : float
          - delayBetweenShootsRockets : float
          - maxRockets : int
          - currentRockets : int
          - activeBullets : Array<Bullet>
          - bulletsToRemove : Array<Bullet>
          - lightBlue : Color
          - healthBar : Texture
          - newX : float
          - newY : float
          - colliderXcoordOffset : int
          - colliderYcoordOffset : int
          - colliderWidth : int
          - colliderHeight : int
          - isShieldActive : boolean
          - isAmmoActive : boolean
          - isDestroyed : boolean
          - goingToDie : boolean
          - shieldHealthMax : float
          - currentShieldHealth : float
          - shieldLifeTime : float
          - shieldStateTime : float
          + PlayerShip()
          - initFromFile()
          - setup()
          + correctBounds()
          + draw()
          + shoot()
          + updateCollisionRect()
          + updateBullets()
          + renderBullets()
          + performInputMobile()
          + MoveTowards()
          + performInputPC()
          + getActiveBullets()
          + getScore()
          + setScore()
          + getBulletPool()
          + getCurrentAnimation()
          + setCurrentAnimation()
          + isShieldActive()
          + updateShieldState()
          + updateHealth()
          + setHealPowerUpActive()
          + setAmmoPowerUpActive()
          + setShieldActive()
          + activateShield()
          + isAmmoActive()
          + getCurrentRockets()
          + getRocketPool()
          + getShieldHealthMax()
          + getCurrentShieldHealth()
          + setCurrentShieldHealth()
          + isDestroyed()
          + isGoingToDie()
          + setGoingToDie()
          + dispose()
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      enum animationState {
        defaultFlyAnimation
        shipUnderAttackAnimation
        shieldDefaultAnimation
        shieldJustActivatedAnimation
        shieldDestroyedAnimation
        shieldAttackedAnimation
        shipDestroyedAnimation
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      class SpaceShip {
          {static} - random : Random
          # realShipWidth : int
          # realShipHeight : int
          # preferredShipWidth : int
          # preferredShipHeight : int
          # x : float
          # y : float
          # speed : float
          # delayBetweenShootsBullets : float
          # bulletsSpeed : float
          # lastBulletShoot : float
          # currentHealth : float
          # maxHealth : float
          # maxHealing : float
          # damage : float
          + needToShow : boolean
          + isAlive : boolean
          + SpaceShip()
          + SpaceShip()
          + setX()
          + setY()
          + getX()
          + getY()
          + getCurrentHealth()
          + getMaxHealth()
          + getDamage()
          + getHandle()
          + setNeedToShow()
          + setAlive()
          + getPreferredShipWidth()
          + getPreferredShipHeight()
          + getShipCollisionRect()
          + setCurrentHealth()
          + getMaxHealing()
          + setMaxHealing()
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      enum shipHandler {
        zapper
        destroyer
        ignitor
        turtle
        ufo
        star
        pinky
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.gameobjects {
      class Spawner {
          - activeEnemies : Array<Enemy>
          - enemiesToDelete : Array<Enemy>
          - enemyWaveSpawnTimer : float
          - activePowerUps : Array<PowerUp>
          - powerUpsToDelete : Array<PowerUp>
          - activeExplosions : Array<Explosion>
          - explosionsToDelete : Array<Explosion>
          - activeAsteroids : Array<Asteroid>
          - asteroidsToDelete : Array<Asteroid>
          - asteroidSpawnTimer : float
          - random : Random
          + Spawner()
          + initAsteroids()
          + spawnAsteroid()
          + updateAsteroids()
          + renderAsteroids()
          + initExplosions()
          + spawnEnemyExplosion()
          + spawnPlayerExplosion()
          + updateExplosions()
          + renderExplosion()
          + initPowerUps()
          + randomPowerUp()
          + updatePowerUps()
          + renderPowerUps()
          + initEnemies()
          + createRandomEnemy()
          + spawnEnemyWave()
          + updateEnemies()
          + renderEnemies()
          + getAsteroidSpawnTimer()
          + setAsteroidSpawnTimer()
          + getActiveAsteroids()
          + setActiveAsteroids()
          + getPinkyPool()
          + getActiveEnemies()
          + getAsteroidPool()
          + getEnemyExplosionPool()
          + getPlayerExplosionPool()
          + getActiveExplosions()
          + getActivePowerUps()
          + checkAsteroidPool()
          + checkEnemyPool()
          + checkExplosionPool()
          + checkPowerUpPool()
      }
    }
  }
  

  PlayerShip -up-|> SpaceShip
  PlayerShip o-- animationState : currentAnimation
  PlayerShip o-- BulletPool : bulletPool
  PlayerShip o-- BulletPool : rocketPool
  PlayerShip +-down- animationState
  SpaceShip o-- shipHandler : handle
  SpaceShip o-- CollisionRect : shipCollisionRect
  SpaceShip +-down- shipHandler
  Spawner o-- EnemyPool : zapperPool
  Spawner o-- EnemyPool : destroyerPool
  Spawner o-- EnemyPool : ignitorPool
  Spawner o-- EnemyPool : turtlePool
  Spawner o-- EnemyPool : ufoPool
  Spawner o-- EnemyPool : starPool
  Spawner o-- EnemyPool : pinkyPool
  Spawner o-- PowerUpPool : healPowerUpPool
  Spawner o-- PowerUpPool : ammoPowerUpPool
  Spawner o-- PowerUpPool : shieldPowerUpPool
  Spawner o-- ExplosionPool : enemyExplosionPool
  Spawner o-- ExplosionPool : playerExplosionPool
  Spawner o-- AsteroidPool : asteroidPool


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
