@startuml

title __UTILS's Class Diagram__\n

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.utils {
      class Assets {
          {static} + manager : AssetManager
          {static} + lightGreen_1 : Color
          {static} + lightGreen_2 : Color
          {static} + lightGreen_3 : Color
          {static} + lightPinky : Color
          {static} + lightAquamarine : Color
          {static} + lightBlue_1 : Color
          {static} + lightBlue_2 : Color
          {static} + lightBlue_3 : Color
          {static} + lightBlue_4 : Color
          {static} + lightBlue_5 : Color
          {static} + lightYellow_1 : Color
          {static} + lightYellow_2 : Color
          {static} + apiServer : String
          {static} + apiEndpointScoreboard : String
          {static} + apiEndpointUpdateScore : String
          {static} + apiServerPort : int
          {static} + settingsXmlFile : String
          {static} + settingsFile : String
          {static} + playBtn : String
          {static} + playBtnPressed : String
          {static} + shopBtn : String
          {static} + shopBtnPressed : String
          {static} + settBtn : String
          {static} + settBtnPressed : String
          {static} + exitBtn : String
          {static} + exitBtnPressed : String
          {static} + healTileUp : String
          {static} + healTileDown : String
          {static} + ammoTileUp : String
          {static} + ammoTileDown : String
          {static} + shieldTileUp : String
          {static} + shieldTileDown : String
          {static} + closeBtnUp : String
          {static} + closeBtnDown : String
          {static} + buyMenuPlane : String
          {static} + checkBoxImageUp : String
          {static} + checkBoxImageDown : String
          {static} + blank : String
          {static} + blankBig : String
          {static} + pauseBtnUp : String
          {static} + pauseBtnDown : String
          {static} + arrow : String
          {static} + asteroid1Animation : String
          {static} + asteroid2Animation : String
          {static} + explosion1 : String
          {static} + explosion2 : String
          {static} + explosion3 : String
          {static} + explosion4 : String
          {static} + explosion5 : String
          {static} + explosion6 : String
          {static} + explosion7 : String
          {static} + explosion8 : String
          {static} + nebula1 : String
          {static} + nebula2 : String
          {static} + mars1 : String
          {static} + aqua1 : String
          {static} + earth1 : String
          {static} + jupiter1 : String
          {static} + neptune1 : String
          {static} + star1 : String
          {static} + star2 : String
          {static} + star3 : String
          {static} + backgroundSpace : String
          {static} + BackgroundLightStars : String
          {static} + emulogicfnt : String
          {static} + emulogicpng : String
          {static} + uiskin : String
          {static} + ship0Animation : String
          {static} + ship1Animation : String
          {static} + ship2Animation : String
          {static} + ship3Animation : String
          {static} + ship4Animation : String
          {static} + ship5Animation : String
          {static} + ship6Animation : String
          {static} + ship7Animation : String
          {static} + ship8Animation : String
          {static} + ship9Animation : String
          {static} + ship10Animation : String
          {static} + ship11Animation : String
          {static} + ship12Animation : String
          {static} + ship13Animation : String
          {static} + bullet1 : String
          {static} + bullet2 : String
          {static} + rocket1 : String
          {static} + healPowerUp : String
          {static} + ammoPowerUp : String
          {static} + shieldPowerUp : String
          {static} + shipConfigs : String
          {static} + currentState : String
          {static} + loadFont()
          {static} + loadExplosions()
          {static} + loadAsteroids()
          {static} + loadUiButtons()
          {static} + loadBackground()
          {static} + loadPowerUps()
          {static} + loadShips()
          {static} + loadBullets()
          {static} + loadSkin()
          {static} + unloadFont()
          {static} + unloadExplosions()
          {static} + unloadAsteroids()
          {static} + unloadUiButtons()
          {static} + unloadBackground()
          {static} + unloadPowerUps()
          {static} + unloadShips()
          {static} + unloadBullets()
          {static} + unloadSkin()
          {static} + dispose()
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.utils {
      class BuildConfig {
          {static} + DEBUG : boolean
          {static} + UIDEBUG : boolean
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.utils {
      class DebugUtils {
          ~ lastTimeCounted : long
          - sinceChange : float
          - frameRate : float
          - font : BitmapFont
          - batch : SpriteBatch
          - cam : OrthographicCamera
          + DebugUtils()
          + resize()
          + update()
          + render()
          + dispose()
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.utils {
      class Encryptor {
          {static} - magic : int
          {static} - secureRandom : SecureRandom
          {static} - privateKey : byte[]
          {static} - initVector : byte[]
          + Encryptor()
          + encrypt()
          + decrypt()
          + encryptFile()
          + decryptFile()
          - initInitVector()
          - initKey()
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.utils {
      class Initializer {
          {static} + init()
          {static} + initShipConfigs()
          {static} + initCurrentState()
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.utils {
      class ObjectHandler {
          + speed : int
          + x : int
          + y : int
          + sprite : Sprite
          + preferredHeight : int
          + preferredWidth : int
          + ObjectHandler()
          + compareTo()
          + dispose()
          + getPreferredHeight()
          + getPreferredWidth()
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.utils {
      class ParametersHandler {
          + animationTexture : String
          + frameLength : float
          + realShipWidth : int
          + realShipHeight : int
          + preferredShipWidth : int
          + preferredShipHeight : int
          + colliderWidth : int
          + colliderHeight : int
          + colliderXcoordOffset : int
          + colliderYcoordOffset : int
          + enemyReward : int
          + shipPrice : int
          + isBought : boolean
          + shipSpeed : float
          + handler : String
          + desc : String
          + maxHealth : float
          + maxHealing : float
          + preferredBulletHeight : int
          + preferredBulletWidth : int
          + bulletTexture : String
          + bulletSpeed : float
          + damage : float
          + delayBetweenShootsBullets : float
          + rocketTexturePath : String
          + preferredRocketHeight : int
          + preferredRocketWidth : int
          + rocketSpeed : float
          + lastRocketShoot : float
          + delayBetweenShootsRockets : float
          + maxRockets : int
          + currentRockets : int
          + isAmmoActive : boolean
          + shieldLifeTime : float
          + shieldHealthMax : float
          + currentShieldHealth : float
          + isShieldActive : boolean
          + ParametersHandler()
          + setUpDefaultShip()
          + setUpDestroyer()
          + setUpIgnitor()
          + setUpTurtle()
          + setUpUfo()
          + setUpStar()
          + setUpPinky()
          + getAnimationTexture()
          + setAnimationTexture()
          + getFrameLength()
          + setFrameLength()
          + getRealShipWidth()
          + setRealShipWidth()
          + getRealShipHeight()
          + setRealShipHeight()
          + getPreferredShipWidth()
          + setPreferredShipWidth()
          + getPreferredShipHeight()
          + setPreferredShipHeight()
          + getColliderWidth()
          + setColliderWidth()
          + getColliderHeight()
          + setColliderHeight()
          + getColliderXcoordOffset()
          + setColliderXcoordOffset()
          + getColliderYcoordOffset()
          + setColliderYcoordOffset()
          + getShipPrice()
          + setShipPrice()
          + getShipSpeed()
          + setShipSpeed()
          + getHandler()
          + setHandler()
          + getMaxHealth()
          + setMaxHealth()
          + getMaxHealing()
          + setMaxHealing()
          + getPreferredBulletHeight()
          + setPreferredBulletHeight()
          + getPreferredBulletWidth()
          + setPreferredBulletWidth()
          + getBulletTexture()
          + setBulletTexture()
          + getBulletSpeed()
          + setBulletSpeed()
          + getDamage()
          + setDamage()
          + getDelayBetweenShootsBullets()
          + setDelayBetweenShootsBullets()
          + getRocketTexturePath()
          + setRocketTexturePath()
          + getPreferredRocketHeight()
          + setPreferredRocketHeight()
          + getPreferredRocketWidth()
          + setPreferredRocketWidth()
          + getRocketSpeed()
          + setRocketSpeed()
          + getLastRocketShoot()
          + setLastRocketShoot()
          + getDelayBetweenShootsRockets()
          + setDelayBetweenShootsRockets()
          + getMaxRockets()
          + setMaxRockets()
          + getCurrentRockets()
          + setCurrentRockets()
          + getIsAmmoActive()
          + setAmmoActive()
          + getShieldLifeTime()
          + setShieldLifeTime()
          + getShieldHealthMax()
          + setShieldHealthMax()
          + getCurrentShieldHealth()
          + setCurrentShieldHealth()
          + getIsShieldActive()
          + setShieldActive()
          + getIsBought()
          + setBought()
          + getEnemyReward()
          + setEnemyReward()
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.utils {
      class ScrollingBackground {
          - miniObjects : ArrayList<ObjectHandler>
          - baseBackground : Sprite
          - ran : Random
          {static} - size : int
          - stopper : int
          + ScrollingBackground()
          {static} + initStarBackground()
          + draw()
          + pause()
          + _continue()
          + dispose()
      }
    }
  }
  

  package com.madrat.spaceshooter {
    package com.madrat.spaceshooter.utils {
      class Stats {
          - killedEnemies : int
          - healPickedUp : int
          - ammoPickedUp : int
          - shieldPickedUp : int
          - destroyedAsteroids : int
          - score : int
          + getKilledEnemies()
          + setKilledEnemies()
          + incKilledEnemies()
          + getHealPickedUp()
          + setHealPickedUp()
          + incHealPickedUp()
          + getAmmoPickedUp()
          + setAmmoPickedUp()
          + incAmmoPickedUp()
          + getShieldPickedUp()
          + setShieldPickedUp()
          + incShieldPickedUp()
          + getDestroyedAsteroids()
          + setDestroyedAsteroids()
          + incDestroyedAsteroids()
          + getScore()
          + setScore()
          + incScore()
      }
    }
  }
  

  DebugUtils -up-|> Disposable
  ObjectHandler -up-|> Comparable
  ParametersHandler -up-|> Serializable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
